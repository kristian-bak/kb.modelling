## Document
devtools::document()
## Load function:
devtools::load_all()
res_sfa <- f_sfa(ticker = "MATAS.CO", target_name = "flag_change_tomorrow", b = 10)
res_sfa <- f_sfa(ticker = "MATAS.CO", offline = TRUE, target_name = "flag_change_tomorrow", b = 10)
## Document
devtools::document()
## Load function:
devtools::load_all()
## Test all functions:
devtools::test()
res_sfa <- f_sfa(ticker = "MATAS.CO", offline = TRUE,
target_name = "flag_change_tomorrow", b = 10)
res_sfa
q <- rowMeans(res_sfa)
q
var_names <- names(q[q >= 0.63])
var_names
## Document
devtools::document()
## Load function:
devtools::load_all()
var_names <- names(q[q >= 0.63])
var_names
init_var <- names(q[q >= 0.63])
res_step <- f_step(data = data,
target_name = "flag_change_tomorrow",
init_var = init_var, n_max_steps = 3)
res_step <- f_step(ticker = "MATAS.CO",
target_name = "flag_change_tomorrow",
init_var = init_var, n_max_steps = 3)
f_load_data
## Document
devtools::document()
## Load function:
devtools::load_all()
res_step <- f_step(ticker = "MATAS.CO",
target_name = "flag_change_tomorrow",
init_var = init_var, n_max_steps = 2)
f_load_data
## Document
devtools::document()
## Load function:
devtools::load_all()
## Document
devtools::document()
## Load function:
devtools::load_all()
res_step <- f_step(ticker = "MATAS.CO", offline = FALSE,
target_name = "flag_change_tomorrow",
init_var = init_var, n_max_steps = 2)
## Document
devtools::document()
## Document
devtools::document()
## Load function:
devtools::load_all()
res_step <- f_step(ticker = "MATAS.CO", offline = FALSE,
target_name = "flag_change_tomorrow",
init_var = init_var, n_max_steps = 2)
## Document
devtools::document()
## Document
devtools::document()
## Load function:
devtools::load_all()
data <- f_load_one(ticker = "MATAS.CO", offline = TRUE)
res_step <- f_step(data = data, offline = FALSE,
target_name = "flag_change_tomorrow",
init_var = init_var, n_max_steps = 2)
res_step <- f_step(data = data,
target_name = "flag_change_tomorrow",
init_var = init_var, n_max_steps = 2)
## Document
devtools::document()
## Load function:
devtools::load_all()
dt <- f_load_one(ticker = "MATAS.CO", offline = TRUE)
dt
res_step <- f_step(data = dt,
target_name = "flag_change_tomorrow",
init_var = init_var, n_max_steps = 2)
names(dt)
names(dt)
res_step <- f_step(data = dt,
target_name = "flag_change_tomorrow",
init_var = c("RSI", "momentum", "Williams_pct"), n_max_steps = 2)
## Document
devtools::document()
## Load function:
devtools::load_all()
res_step <- f_step(data = dt,
target_name = "flag_change_tomorrow",
init_var = c("RSI", "momentum", "Williams_pct"), n_max_steps = 2)
## Document
devtools::document()
## Load function:
devtools::load_all()
res_step <- f_step(data = dt,
target_name = "flag_change_tomorrow",
init_var = c("RSI", "momentum", "Williams_pct"),
n_max_steps = 2)
## Document
devtools::document()
## Load function:
devtools::load_all()
res_step <- f_step(data = dt,
target_name = "flag_change_tomorrow",
init_var = c("RSI", "momentum", "Williams_pct"),
n_max_steps = 2)
res_step
res_step <- f_step(data = dt,
target_name = "flag_change_tomorrow",
init_var = c("RSI", "momentum", "Williams_pct"),
n_max_steps = 5)
res_step
res_step <- f_step(data = dt,
target_name = "flag_change_tomorrow",
init_var = c("RSI", "momentum", "Williams_pct", "MA10_slope",
"pct_bb", "MA5_slope", "EMA10"),
n_max_steps = 5)
res_step
res <- f_report(ticker = "MATAS.CO", var_names = res_step$variables, offline = TRUE,
importance_plot = TRUE, shap_plot = TRUE, top_n = 10)
## Document
devtools::document()
f_load
## Document
devtools::document()
## Load function:
devtools::load_all()
res <- f_report(ticker = "MATAS.CO", var_names = res_step$variables, offline = TRUE,
importance_plot = TRUE, shap_plot = TRUE, top_n = 10)
## Document
devtools::document()
## Load function:
devtools::load_all()
res <- f_report(ticker = "MATAS.CO", var_names = res_step$variables, offline = TRUE,
importance_plot = TRUE, shap_plot = TRUE, top_n = 10)
res$auc
f_var_names()
f_var_names(dt)
f_data_prep
f_indicator
f_data_prep
f_indicator
data[, change_day1 := NULL]
data[, open_tomorrow := f_lag(Open, n = 1)]
dt
x <- "ma_bb"
data[is.na(mget(x)), ]
data[is.na(get(x)), ]
x
dt[is.na(get(x)), ]
## Document
devtools::document()
## Load function:
devtools::load_all()
f_report
f_report
## Document
devtools::document()
## Load function:
devtools::load_all()
res <- f_report(ticker = "MATAS.CO", target_name = "target_day1", offline = FALSE,
importance_plot = TRUE, shap_plot = TRUE, top_n = 10)
## Document
devtools::document()
## Load function:
devtools::load_all()
res <- f_report(ticker = "MATAS.CO", target_name = "target_day1", offline = FALSE,
importance_plot = TRUE, shap_plot = TRUE, top_n = 10)
res$nrow
res$plot
res$auc
## Document
devtools::document()
## Load function:
devtools::load_all()
res <- f_report(ticker = "MATAS.CO", target_name = "target_day1", offline = FALSE,
importance_plot = TRUE, shap_plot = TRUE, top_n = 10)
res$data
res$auc
res <- f_report(ticker = "MATAS.CO", target_name = "target_day1", offline = FALSE,
importance_plot = TRUE, shap_plot = TRUE, top_n = 10)
res$auc
f_split_train_test
## Document
devtools::document()
## Load function:
devtools::load_all()
res <- f_report(ticker = "MATAS.CO", target_name = "target_day1", offline = FALSE,
importance_plot = TRUE, shap_plot = TRUE, top_n = 10)
res$auc
res <- f_report(ticker = "MATAS.CO", target_name = "target_day1", offline = FALSE,
importance_plot = TRUE, shap_plot = TRUE, top_n = 10)
res$auc
res <- f_report(ticker = "MATAS.CO", target_name = "target_day5", offline = FALSE,
importance_plot = TRUE, shap_plot = TRUE, top_n = 10)
res$auc
res <- f_report(ticker = "MATAS.CO", target_name = "target_day10", offline = FALSE,
importance_plot = TRUE, shap_plot = TRUE, top_n = 10)
res$auc
head(dt)
as_tibble(dt)
## Document
devtools::document()
## Load function:
devtools::load_all()
res <- f_report(ticker = "MATAS.CO", target_name = "target_day10", offline = FALSE,
importance_plot = TRUE, shap_plot = TRUE, top_n = 10)
head(data)
f_lag
head(data)[, c("Date", "Change")]
head(data)[, c("Date", "Change", "change_day1")]
head(data)[, c("Close", "Date", "Change", "change_day1")]
head(data)[, c("Date", "Close", "Change", "change_day1")]
data <- f_load(ticker = ticker, from_date = from_date, offline = offline)
data[, close_day1 := f_lag(Close, n = 1)]
data[, close_day5 := f_lag(Close, n = 5)]
data[, close_day10 := f_lag(Close, n = 10)]
data[, close_day20 := f_lag(Close, n = 20)]
data[, close_day50 := f_lag(Close, n = 50)]
head(data)[, c("Date", "Close", "close_day1", "close_day5")]
data[1:10, c("Date", "Close", "close_day1", "close_day5")]
data[200:220, c("Date", "Close", "close_day1", "close_day5")]
data[1:10, "Close"]
data$Close[1:5]
c <- data$Close[1:5]
data[seq(from = 1, to = 20, by = 5), ]
data[seq(from = 1, to = 20, by = 5), c("Date", "Close")]
seq(from = 1, to = 20, by = 5)
seq(from = 1, to = 20, by = 4)
seq(from = 0, to = 20, by = 5)
data[seq(from = 1, to = 20, by = 5), c("Date", "Close")]
data[200:220, c("Date", "Close", "close_day1", "close_day5")]
f_lag
f_lag(x = 1:10, n = 1)
f_lag(x = 1:10, n = 2)
f_lag(x = 1:10, n = 5)
f_lag(x = 1:10, n = 0)
f_lag(x = 1:10, n = 5)
data[1:15, c("Date", "Close", "close_day1", "close_day5")]
data[1:15, c("Date", "Close", "close_day1", "close_day5")]
data <- f_load(ticker = ticker, from_date = from_date, offline = offline)
data[, close_day1 := f_lag(Close, n = 1)]
data[, close_day5 := f_lag(Close, n = 5)]
data[, close_day10 := f_lag(Close, n = 10)]
data[, close_day20 := f_lag(Close, n = 20)]
data[, close_day50 := f_lag(Close, n = 50)]
data[, target_day1 := 1 * (close_day1 >= Close)]
data[, target_day5 := 1 * (close_day5 >= Close)]
data[, target_day10 := 1 * (close_day10 >= Close)]
data[, target_day20 := 1 * (close_day20 >= Close)]
data[, target_day50 := 1 * (close_day50 >= Close)]
head(data[, c("Date", "Close", "close_day1", "close_day5", "target_day1", "target_day5")])
head(data[1:10, c("Date", "Close", "close_day1", "close_day5", "target_day1", "target_day5")])
data[1:10, c("Date", "Close", "close_day1", "close_day5", "target_day1", "target_day5")]
## Document
devtools::document()
## Load function:
devtools::load_all()
res <- f_report(ticker = "MATAS.CO", target_name = "target_day10", offline = FALSE,
importance_plot = TRUE, shap_plot = TRUE, top_n = 10)
res$data
res$nrow
res$auc
res$cor
res$plot
res$trade_plot
res <- f_report(ticker = "MATAS.CO", target_name = "target_day1", offline = FALSE,
importance_plot = TRUE, shap_plot = TRUE, top_n = 10)
res$auc
res <- f_report(ticker = "MATAS.CO", target_name = "target_day5", offline = FALSE,
importance_plot = TRUE, shap_plot = TRUE, top_n = 10)
res$auc
res$trade_plot
res <- f_report(ticker = "MATAS.CO", target_name = "target_day20", offline = FALSE,
importance_plot = TRUE, shap_plot = TRUE, top_n = 10)
res$data
res$nrow
res$auc
res <- f_report(ticker = "MATAS.CO", target_name = "target_day50", offline = FALSE,
importance_plot = TRUE, shap_plot = TRUE, top_n = 10)
res$auc
res$trade_plot
res <- f_report(ticker = "MATAS.CO", target_name = "target_day20", offline = FALSE,
importance_plot = TRUE, shap_plot = TRUE, top_n = 10)
res$auc
res$trade_plot
res <- f_report(ticker = "MATAS.CO", target_name = "target_day10", offline = FALSE,
importance_plot = TRUE, shap_plot = TRUE, top_n = 10)
res$auc
res$trade_plot
res$cor
res <- f_report(ticker = "MATAS.CO", target_name = "target_day20", offline = FALSE,
importance_plot = TRUE, shap_plot = TRUE, top_n = 10)
res$auc
res$trade_plot
res$cor
res_sfa <- f_sfa(ticker = "MATAS.CO", offline = FALSE,
target_name = "target_day20", b = 10)
res_sfa <- f_sfa(ticker = "MATAS.CO", offline = FALSE,
target_name = "target_day20", b = 10)
## Document
devtools::document()
## Load function:
devtools::load_all()
res_sfa <- f_sfa(ticker = "MATAS.CO", offline = FALSE,
target_name = "target_day20", b = 10)
f_train
## Document
devtools::document()
## Load function:
devtools::load_all()
res_sfa <- f_sfa(ticker = "MATAS.CO", offline = FALSE,
target_name = "target_day20", b = 10)
f_train(df_train = sub_train_data,
target_name = target_name,
var = var_names[i],
nrounds = 250,
max.depth = 8,
eta = 0.1,
min_child_weight = 20,
early_stopping_rounds = 25,
subsample = 1,
colsample_bytree = 0.7,
gamma = 1,
weight = weight)
sub_train_data
target_name
i
var_names[i]
weight
df_train = sub_train_data
var = var_names[i]
nrounds = 250
max.depth = 8
eta = 0.1
min_child_weight = 20
early_stopping_rounds = 25
subsample = 1
colsample_bytree = 0.7
gamma = 1
is.null(var)
mat_train <- as.matrix(df_train[, var, with = FALSE])
mat_train
df_train[[target_name]]
target_name
df_train
names(df_train)
## Document
devtools::document()
## Load function:
devtools::load_all()
res_sfa <- f_sfa(ticker = "MATAS.CO", offline = FALSE,
target_name = "target_day20", b = 10)
q <- rowMeans(res_sfa)
q
init_var <- names(q[q >= 0.6])
init_var
dt <- f_load_data(ticker = "MATAS.CO")
q
sort(q)
sort(q, decreasing = TRUE)
q <- sort(q, decreasing = TRUE)
init_var <- q[1:6]
<-
init_var
init_var <- names(q[1:6])
init_var
res_step <- f_step(data = dt,
target_name = "target_day20",
init_var = init_var,
n_max_steps = 5)
res_step
res <- f_report(ticker = "MATAS.CO", var_names = res_step$variables, offline = FALSE,
importance_plot = TRUE, shap_plot = TRUE, top_n = 10)
res$nrow
res$auc
res$trade_plot
res_step
res_step
## Document
devtools::document()
## Load function:
devtools::load_all()
res_step <- f_step(data = dt,
target_name = "target_day20",
init_var = init_var,
n_max_steps = 1)
res_step <- f_step(data = dt,
target_name = "target_day20",
init_var = init_var,
n_max_steps = 2)
f_indicator
## Load function:
devtools::load_all()
res_sfa <- f_sfa(ticker = "MATAS.CO", offline = FALSE,
target_name = "target_day20", b = 10)
q <- rowMeans(res_sfa)
q <- sort(q, decreasing = TRUE)
q
init_var <- names(q[1:6])
init_var
dt <- f_load_data(ticker = "MATAS.CO")
res_step <- f_step(data = dt,
target_name = "target_day20",
init_var = init_var,
n_max_steps = 2)
res_step
res_step <- f_step(data = dt,
target_name = "target_day20",
init_var = init_var,
n_max_steps = 5)
res_step
res <- f_report(ticker = "MATAS.CO", var_names = res_step$variables, offline = FALSE,
importance_plot = TRUE, shap_plot = TRUE, top_n = 10)
res$auc
res$trade_plot
res <- f_report(ticker = "MATAS.CO", target_name = "target_day20",
var_names = res_step$variables, offline = FALSE,
importance_plot = TRUE, shap_plot = TRUE, top_n = 10)
res$auc
res$trade_plot
## Document
devtools::document()
## Load function:
devtools::load_all()
res_step <- f_step(data = dt,
target_name = "target_day20",
init_var = init_var,
n_max_steps = 5)
res_step
res <- f_report(ticker = "MATAS.CO", target_name = "target_day20",
var_names = res_step$variables, offline = FALSE,
importance_plot = TRUE, shap_plot = TRUE, top_n = 10)
res$auc
res_step$variables
form <- paste0("target_day20 ~ ", paste0(res_step$variables), collapse = "+"))
form
res_step$variables
form <- paste0("target_day20 ~ ", paste0(res_step$variables, collapse = "+"))
df_train <- data[1:1036, ]
outcome <- f_split_train_test(dt)
df_train <- outcome$train_data
df_test <- outcome$test_out_data
m3 <- glm(form, family = binomial(), data = df_train)
df_test$p <- predict(m2, newdata = df_test, type = "response")
df_test$p <- predict(m3, newdata = df_test, type = "response")
summary(m3)
df_train <- df_train %>%
mutate(RSI_group = 10 * cut(RSI, breaks = seq(from = 0, to = 100, by = 10),
labels = FALSE, include.lowest = TRUE),
MACD_group = cut(MACD, breaks = seq(from = -20, to = 10, by = 0.25),
labels = FALSE, include.lowest = TRUE))
library(dplyr)
df_train <- df_train %>%
mutate(RSI_group = 10 * cut(RSI, breaks = seq(from = 0, to = 100, by = 10),
labels = FALSE, include.lowest = TRUE),
MACD_group = cut(MACD, breaks = seq(from = -20, to = 10, by = 0.25),
labels = FALSE, include.lowest = TRUE))
df_train$p <- predict(m2, type = "response")
df_train$p <- predict(m3, type = "response")
df_train$p <- predict(m3, type = "response", newdata = df_train)
df_plot <- df_train %>%
group_by(RSI_group) %>%
summarise(expected = sum(p) / n(),
observed = sum(flag_change_tomorrow) / n(),
counts = n())
plot_ly(data = df_plot, x = ~RSI_group,
y = ~expected, type = "scatter", mode = "lines+markers", name = "expected") %>%
add_trace(x = ~RSI_group, y = ~observed, type = "scatter", mode = "lines+markers", name = "observed")
library(plotly)
plot_ly(data = df_plot, x = ~RSI_group,
y = ~expected, type = "scatter", mode = "lines+markers", name = "expected") %>%
add_trace(x = ~RSI_group, y = ~observed, type = "scatter", mode = "lines+markers", name = "observed")
f_auc <- function(m, train_data, test_data, target = "flag_change_tomorrow") {
train_p <- predict(m)
test_p <- predict(m, newdata = test_data)
train_auc <- somers2(x = train_p, y = train_data[[target]])[1]
test_auc <- somers2(x = test_p, y = test_data[[target]])[1]
list("train_auc" = train_auc, "test_auc" = test_auc)
}
f_auc(m = m2, train_data = df_train, test_data = df_test)
f_auc(m = m3, train_data = df_train, test_data = df_test)
f_auc <- function(m, train_data, test_data, target = "flag_change_tomorrow") {
train_p <- predict(m)
test_p <- predict(m, newdata = test_data)
train_auc <- Hmisc::somers2(x = train_p, y = train_data[[target]])[1]
test_auc <- Hmisc::somers2(x = test_p, y = test_data[[target]])[1]
list("train_auc" = train_auc, "test_auc" = test_auc)
}
f_auc(m = m3, train_data = df_train, test_data = df_test)
f_auc <- function(m, train_data, test_data, target = "flag_change_tomorrow") {
train_p <- predict(m, newdata = train_data)
test_p <- predict(m, newdata = test_data)
train_auc <- Hmisc::somers2(x = train_p, y = train_data[[target]])[1]
test_auc <- Hmisc::somers2(x = test_p, y = test_data[[target]])[1]
list("train_auc" = train_auc, "test_auc" = test_auc)
}
f_auc(m = m3, train_data = df_train, test_data = df_test)
res$auc
f_auc <- function(m, train_data, test_data, target = "flag_change_tomorrow") {
train_p <- predict(m, newdata = train_data)
test_p <- predict(m, newdata = test_data)
train_auc <- Hmisc::somers2(x = train_p, y = train_data[[target]])[1]
test_auc <- Hmisc::somers2(x = test_p, y = test_data[[target]])[1]
list("train_auc" = train_auc, "test_auc" = test_auc)
}
f_auc(m = m3, train_data = df_train, test_data = df_test)
