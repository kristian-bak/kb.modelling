data$RSI %>%
is.na() %>%
sum()
data <- data %>%
mutate(RSI = if_else(is.na(RSI), 0, RSI))
library(dplyr)
data <- data %>%
mutate(RSI = if_else(is.na(RSI), 0, RSI))
m <- lm(Close ~ RSI, data = data)
summary(m)
data$RSI %>%
is.na() %>%
sum()
data$p <- predict(m)
plot_ly(data, x = ~RSI, y = ~Close,
type = "scatter", name = "Close", mode = "lines")
plot_ly(data, x = ~RSI, y = ~Close,
type = "scatter", name = "Close", mode = "lines") %>%
add_trace(x = ~Time, y = ~p, mode = "lines", name = "p")
plot_ly(data, x = ~RSI, y = ~Close,
type = "scatter", name = "Close", mode = "lines") %>%
add_trace(x = ~RSI, y = ~p, mode = "lines", name = "p")
m <- lm(Change ~ RSI, data = data)
summary(m)
data$p <- predict(m)
plot_ly(data, x = ~RSI, y = ~Change,
type = "scatter", name = "Close", mode = "lines")
plot_ly(data, x = ~RSI, y = ~Change,
type = "scatter", name = "Close", mode = "markers")
plot_ly(data, x = ~RSI, y = ~Change,
type = "scatter", name = "Close", mode = "markers", alpha = 0.2)
plot_ly(data, x = ~RSI, y = ~Change,
type = "scatter", name = "Close", mode = "markers", alpha = 0.5)
plot_ly(data, x = ~RSI, y = ~Change,
type = "scatter", name = "Close", mode = "markers", alpha = 0.5) %>%
add_trace(x = ~RSI, y = ~p, mode = "lines", name = "p")
ggplot(data, aes(x = RSI, y = Change)) + geom_smooth()
ggplot(data, aes(x = RSI, y = Change)) + geom_point(aes(alpha = 0.5)) + geom_smooth()
ggplot(data, aes(x = RSI, y = Change)) + geom_point(alpha = 0.5) + geom_smooth()
data <- f_load_data(ticker = "DANSKE.CO")
data <- data %>%
filter(!is.na(RSI))
m <- lm(Change ~ RSI, data = data)
summary(m)
data$RSI %>%
is.na() %>%
sum()
data$p <- predict(m)
plot_ly(data, x = ~RSI, y = ~Change,
type = "scatter", name = "Close", mode = "markers", alpha = 0.5) %>%
add_trace(x = ~RSI, y = ~p, mode = "lines", name = "p")
summary(m)
m <- lm(Change ~ MA10_slope, data = data)
summary(m)
RSI
RSI
m <- lm(Change ~ RSI, data = data)
summary(m)
m <- lm(Change ~ MA10_slope, data = data)
data$p <- predict(m)
data2 <- data %>%
filter(!is.na(MA10_slope))
m <- lm(Change ~ MA10_slope, data = data2)
plot_ly(data, x = ~MA10_slope, y = ~Change,
type = "scatter", name = "Close", mode = "markers", alpha = 0.5) %>%
add_trace(x = ~MA10_slope, y = ~p, mode = "lines", name = "p")
m <- lm(Change ~ MA10_slope, data = data2)
data2$p <- predict(m)
plot_ly(data2, x = ~MA10_slope, y = ~Change,
type = "scatter", name = "Close", mode = "markers", alpha = 0.5) %>%
add_trace(x = ~MA10_slope, y = ~p, mode = "lines", name = "p")
plot_ly(data2, x = ~MA10_slope, y = ~MA10,
type = "scatter", name = "Close", mode = "markers", alpha = 0.5) %>%
add_trace(x = ~MA10_slope, y = ~MA10, mode = "lines", name = "p")
## Document
devtools::document()
## Load function:
devtools::load_all()
res <- f_report(ticker = "DANSKE.CO",
target_name = "target_day50",
var_names = init_var,
offline = FALSE, importance_plot = TRUE,
shap_plot = TRUE, top_n = 10)
res <- f_report(ticker = "DANSKE.CO",
target_name = "target_day50",
var_names = c("RSI", "MA", "momentum", "MA10_slope", "MA10"),
offline = FALSE, importance_plot = TRUE,
shap_plot = TRUE, top_n = 10)
res$auc
res$trade_plot
res <- f_report(ticker = "DANSKE.CO",
target_name = "target_day50",
var_names = c("RSI", "MA", "momentum", "MA10_slope", "MA10"),
offline = FALSE, importance_plot = TRUE,
shap_plot = TRUE, top_n = 10)
res$auc
res <- f_report(ticker = "DANSKE.CO",
target_name = "target_day20",
var_names = c("RSI", "MA", "momentum", "MA10_slope", "MA10"),
offline = FALSE, importance_plot = TRUE,
shap_plot = TRUE, top_n = 10)
res$auc
res <- f_report(ticker = "DANSKE.CO",
target_name = "target_day10",
var_names = c("RSI", "MA", "momentum", "MA10_slope", "MA10"),
offline = FALSE, importance_plot = TRUE,
shap_plot = TRUE, top_n = 10)
res$auc
res <- f_report(ticker = "DANSKE.CO",
target_name = "target_day50",
var_names = c("RSI", "MA", "momentum", "MA10_slope", "MA10"),
offline = FALSE, importance_plot = TRUE,
shap_plot = TRUE, top_n = 10)
res$auc
res$importance_plot
res$comp_time
res$cor
res$auc
data$Time <- as.Date(data$Date)
data <- res$data
data$Time <- as.Date(data$Date)
data$MA10_slope
plot_ly(data, x = ~Time, y = ~MA10, type = "scatter", name = "MA20", mode = "lines")
library(plotly)
plot_ly(data, x = ~Time, y = ~MA10, type = "scatter", name = "MA20", mode = "lines")
## Document
devtools::document()
## Load function:
devtools::load_all()
res <- f_report(ticker = "DANSKE.CO",
target_name = "target_day50",
var_names = c("RSI", "MA", "momentum", "MA10_slope", "MA10"),
offline = FALSE, importance_plot = TRUE,
shap_plot = TRUE, top_n = 10)
## Document
devtools::document()
## Load function:
devtools::load_all()
res <- f_report(ticker = "DANSKE.CO",
target_name = "target_day50",
var_names = c("RSI", "MA", "momentum", "MA10_slope", "MA10"),
offline = FALSE, importance_plot = TRUE,
shap_plot = TRUE, top_n = 10)
## Document
devtools::document()
## Load function:
devtools::load_all()
res <- f_report(ticker = "DANSKE.CO",
target_name = "target_day50",
var_names = c("RSI", "MA", "momentum", "MA10_slope", "MA10"),
offline = FALSE, importance_plot = TRUE,
shap_plot = TRUE, top_n = 10)
res$acc
res$auc
res$acc
res <- f_report(ticker = "DANSKE.CO",
target_name = "target_day50",
var_names = c("RSI", "MA", "momentum", "MA10_slope", "MA10"),
offline = FALSE, importance_plot = TRUE,
shap_plot = TRUE, top_n = 10, c = 0.6)
res$acc
res <- f_report(ticker = "DANSKE.CO",
target_name = "target_day50",
var_names = c("RSI", "MA", "momentum", "MA10_slope", "MA10"),
offline = FALSE, importance_plot = TRUE,
shap_plot = TRUE, top_n = 10, c = 0.4)
res$acc
res <- f_report(ticker = "DANSKE.CO",
target_name = "target_day50",
var_names = c("RSI", "MA", "momentum", "MA10_slope", "MA10"),
offline = FALSE, importance_plot = TRUE,
shap_plot = TRUE, top_n = 10)
res$acc
res$auc
res$acc
res$importance_plot
res$shap_plot
plot_ly(data, x = ~Time, y = ~MA10, type = "scatter", name = "MA20", mode = "lines") %>%
add_trace(x = ~Time, y = ~Close, mode = "lines", name = "Close")
plot_ly(data, x = ~Time, y = ~MA10, type = "scatter", name = "MA20", mode = "lines") %>%
add_trace(x = ~Time, y = ~Close, mode = "lines", name = "Close") %>%
add_trace(x = ~Time, y = ~MA10_slope, mode = "lines", yaxis = "y2", name = "Slope") %>%
layout(yaxis2 = list(overlaying = "y", side = "right"))
plot_ly(data, x = ~Time, y = ~MA10, type = "scatter", name = "MA20", mode = "lines") %>%
add_trace(x = ~Time, y = ~MA10_slope, mode = "lines", yaxis = "y2", name = "Slope") %>%
layout(yaxis2 = list(overlaying = "y", side = "right"))
f_ma_slope
f_slope
data$MA5 == data$MA
f_ma_slope
## Document
devtools::document()
## Load function:
devtools::load_all()
## Document
devtools::document()
## Load function:
devtools::load_all()
## Install
devtools::install()
## Install
devtools::install(upgrade = FALSE)
## Document
devtools::document()
## Load function:
devtools::load_all()
## Test all functions:
devtools::test()
data <- f_load_one(ticker = "^OMXC25", indicators = FALSE, offline = TRUE)
data <- f_load_one(ticker = "^OMXC25", indicators = FALSE, offline = FALSE)
data <- f_load_one(ticker = "MATAS.CO", indicators = FALSE, offline = FALSE)
data <- f_load_one(ticker = "^OMXC25", from_date = "2021-01-01",
indicators = FALSE, offline = FALSE)
data <- f_load_one(ticker = "^OMXC25", from_date = "2016-01-01",
indicators = FALSE, offline = FALSE)
f_load_one
f_load_data
data <- f_load_data(ticker = "^OMXC25", from_date = "2016-01-01",
indicators = FALSE, offline = FALSE)
data <- f_load_data(ticker = "^OMXC25", from_date = "2016-01-01", offline = FALSE)
f_load
data <- f_load(ticker = "^OMXC25", from_date = "2016-01-01", offline = FALSE)
f_load_one
## Document
devtools::document()
## Load function:
devtools::load_all()
data <- f_load(ticker = "^OMXC25", from_date = "2016-01-01",
offline = FALSE, indicators = FALSE)
data
f_load
data <- f_load(ticker = c("MATAS.CO", "^OMXC25"), from_date = "2016-01-01",
offline = FALSE, indicators = FALSE)
data
data <- f_load(ticker = c("DANSKE.CO", "NOVO-B.CO"), from_date = "2016-01-01",
offline = FALSE, indicators = FALSE)
data
f_load
data$Ticker %>% unique()
n <- data$Ticker %>%
unique() %>%
length()
data$Ticker
tickers <- data$Ticker %>%
unique()
tickers
str_tickers <- data$Ticker %>%
unique()
str_tickers <- data$Ticker %>% unique()
str_tickers
df_out <- data[Ticker == str_tickers[i], ]
df_out <- data[Ticker == str_tickers[1], ]
df_out
df_out <- data[Ticker == str_tickers[1], c("Date", "Close")]
f_ticker_name <- function(x) {
gsub("\\.", "_", x)
}
df_out <- data[Ticker == str_tickers[1], c("Date", "Close")]
setnames(df_out, old = "Close", new = f_ticker_name(str_tickers[1]))
df_out
f_columnise <- function(data) {
f_ticker_name <- function(x) {
gsub("\\.", "_", x)
}
str_tickers <- data$Ticker %>% unique()
n_tickers <- length(str_tickers)
if (n_tickers < 2) {
stop("Number of tickers should be at least 2")
}
df_out <- data[Ticker == str_tickers[1], c("Date", "Close")]
setnames(df_out, old = "Close", new = f_ticker_name(str_tickers[1]))
for (i in 2:n) {
df_tmp <- data[Ticker == str_tickers[i], c("Date", "Close")]
setnames(df_out, old = "Close", new = f_ticker_name(str_tickers[i]))
df_out <- df_out %>%
dplyr::inner_join(df_tmp, by = "Date")
}
return(data)
}
f_columnise(data)
data
f_columnise(data)
data <- f_load(ticker = c("DANSKE.CO", "NOVO-B.CO"), from_date = "2016-01-01",
offline = FALSE, indicators = FALSE)
f_columnise(data)
data <- f_load(ticker = c("DANSKE.CO", "NOVO-B.CO"), from_date = "2016-01-01",
offline = FALSE, indicators = FALSE)
f_ticker_name <- function(x) {
gsub("\\.", "_", x)
}
str_tickers <- data$Ticker %>% unique()
n_tickers <- length(str_tickers)
str_tickers
df_out <- data[Ticker == str_tickers[1], c("Date", "Close")]
df_out
f_ticker_name(str_tickers[1])
setnames(df_out, old = "Close", new = f_ticker_name(str_tickers[1]))
data <- f_load(ticker = c("DANSKE.CO", "NOVO-B.CO"), from_date = "2016-01-01",
offline = FALSE, indicators = FALSE)
f_columnise <- function(data) {
f_ticker_name <- function(x) {
gsub("\\.", "_", x)
}
str_tickers <- data$Ticker %>% unique()
n_tickers <- length(str_tickers)
if (n_tickers < 2) {
stop("Number of tickers should be at least 2")
}
df_out <- data[Ticker == str_tickers[1], c("Date", "Close")]
setnames(df_out, old = "Close", new = f_ticker_name(str_tickers[1]))
for (i in 2:n) {
df_tmp <- data[Ticker == str_tickers[i], c("Date", "Close")]
setnames(df_tmp, old = "Close", new = f_ticker_name(str_tickers[i]))
df_out <- df_out %>%
dplyr::inner_join(df_tmp, by = "Date")
}
return(data)
}
f_columnise(data)
f_columnise <- function(data) {
f_ticker_name <- function(x) {
gsub("\\.", "_", x)
}
str_tickers <- data$Ticker %>% unique()
n_tickers <- length(str_tickers)
if (n_tickers < 2) {
stop("Number of tickers should be at least 2")
}
df_out <- data[Ticker == str_tickers[1], c("Date", "Close")]
setnames(df_out, old = "Close", new = f_ticker_name(str_tickers[1]))
for (i in 2:n) {
df_tmp <- data[Ticker == str_tickers[i], c("Date", "Close")]
setnames(df_tmp, old = "Close", new = f_ticker_name(str_tickers[i]))
df_out <- df_out %>%
dplyr::inner_join(df_tmp, by = "Date")
}
return(df_out)
}
f_columnise(data)
## Document
devtools::document()
## Document
devtools::document()
## Load function:
devtools::load_all()
## Document
devtools::document()
## Document
devtools::document()
## Document
devtools::document()
## Document
devtools::document()
## Load function:
devtools::load_all()
dt <- f_load(ticker = c("DANSKE.CO", "NOVO-B.CO"),
from_date = "2018-01-01", indicators = FALSE)
dt <- f_load(ticker = c("DANSKE.CO", "NOVO-B.CO"),
from_date = "2021-01-01", indicators = FALSE)
dt <- f_load(ticker = c("DANSKE.CO", "NOVO-B.CO"),
from_date = "2018-01-01", indicators = FALSE)
dt
dt <- f_columnise(data = dt)
dt
dt <- f_load(ticker = c("DANSKE.CO", "NOVO-B.CO", "^OMXC25"),
from_date = "2018-01-01", indicators = FALSE)
f_columnise(data = dt)
dt <- f_columnise(data = dt)
dt$`^OMXC25`
names(dt)
gsub("\\^", "", names(dt))
## Document
devtools::document()
## Load function:
devtools::load_all()
dt <- f_load(ticker = c("DANSKE.CO", "NOVO-B.CO", "^OMXC25"),
from_date = "2018-01-01", indicators = FALSE)
dt <- f_load(ticker = c("DANSKE.CO", "NOVO-B.CO", "^OMXC25"),
from_date = "2018-01-01", indicators = FALSE)
dt <- f_load(ticker = c("DANSKE.CO", "NOVO-B.CO", "^OMXC25"),
from_date = "2018-01-01", indicators = FALSE)
2+2
dt <- f_load(ticker = c("DANSKE.CO", "NOVO-B.CO", "^OMXC25"),
from_date = "2021-01-01", indicators = FALSE)
dt <- f_load(ticker = c("DANSKE.CO", "NOVO-B.CO", "^OMXC25"),
from_date = "2018-01-01", indicators = FALSE)
dt <- f_load(ticker = c("DANSKE.CO", "NOVO-B.CO", "^OMXC25"),
from_date = "2019-01-01", indicators = FALSE)
dt <- f_columnise(data = dt)
dt
dt <- f_load(ticker = c("DANSKE.CO", "NOVO-B.CO", "^OMXC25"),
from_date = "2019-01-01", indicators = FALSE)
dt <- f_load(ticker = c("DANSKE.CO", "NOVO-B.CO", "^OMXC25"),
from_date = "2018-01-01", indicators = FALSE)
dt <- f_load(ticker = c("DANSKE.CO", "NOVO-B.CO", "^OMXC25"),
from_date = "2019-01-01", indicators = FALSE)
dt <- f_load(ticker = c("DANSKE.CO", "NOVO-B.CO", "^OMXC25"),
from_date = "2019-01-02", indicators = FALSE)
dt <- f_load(ticker = c("DANSKE.CO", "NOVO-B.CO", "^OMXC25"),
from_date = "2019-01-01", indicators = FALSE)
## Document
devtools::document()
## Load function:
devtools::load_all()
dt <- f_load(ticker = c("DANSKE.CO", "NOVO-B.CO", "^OMXC25"),
from_date = "2020-01-01", indicators = FALSE)
dt <- f_load(ticker = c("DANSKE.CO", "NOVO-B.CO", "^OMXC25"),
from_date = "2021-01-01", indicators = FALSE)
f_columnise(data = dt)
dt
data = dt
f_ticker_name <- function(x) {
gsub("\\.", "_", x) %>%
gsub("\\^", "", x)
}
str_tickers <- data$Ticker %>% unique()
n_tickers <- length(str_tickers)
df_out <- data[Ticker == str_tickers[1], c("Date", "Close")]
df_out
f_ticker_name(str_tickers[1])
gsub("\\.^", "", "A^be")
gsub("\\^", "", "A^be")
f_ticker_name <- function(x) {
x <- gsub("\\.", "_", x)
gsub("\\^", "", x)
}
f_ticker_name(str_tickers[1])
## Document
devtools::document()
## Document
devtools::document()
## Load function:
devtools::load_all()
dt <- f_load(ticker = c("DANSKE.CO", "NOVO-B.CO", "^OMXC25"),
from_date = "2021-01-01", indicators = FALSE)
f_columnise(data = dt)
dt <- f_columnise(data = dt)
dt
dt[, portfolio := DANSKE_CO + `NOVO-B_CO`]
## Document
devtools::document()
## Load function:
devtools::load_all()
dt <- f_load(ticker = c("DANSKE.CO", "NOVO-B.CO", "^OMXC25"),
from_date = "2021-01-01", indicators = FALSE)
dt <- f_columnise(data = dt)
dt
dt[, portfolio := DANSKE_CO + NOVO_B_CO]
dt
dt <- f_load(ticker = c("DANSKE.CO", "NOVO-B.CO", "^OMXC25"),
from_date = "2021-01-01", indicators = FALSE)
dt <- f_columnise(data = dt)
dt
dt[, portfolio := DANSKE_CO + NOVO_B_CO]
dt$portfolio <- dt$DANSKE_CO + dt$NOVO_B_CO
dt
dt[, f_change(portfolio, from_start = TRUE)]
dt[, Change := f_change(portfolio, from_start = TRUE)]
dt
dt[, Change_portfolio := f_change(portfolio, from_start = TRUE)]
dt[, Change_benchmark := f_change(OMXC25, from_start = TRUE)]
dt[, Change := NULL]
dt
library(plotly)
plot_ly(data = dt, x = as.Date(~Date), y = ~Change_portfolio,
type = "scatter", mode = "lines+markers", name = "Portfolio") %>%
add_trace(x = as.Date(~Date), y = ~Change_benchmark, name = "Benchmark")
plot_ly(data = dt, x = ~as.Date(Date), y = ~Change_portfolio,
type = "scatter", mode = "lines+markers", name = "Portfolio") %>%
add_trace(x = ~as.Date(Date), y = ~Change_benchmark, name = "Benchmark")
plot_ly(data = dt, x = ~as.Date(Date), y = ~Change_portfolio,
type = "scatter", mode = "lines+markers", name = "Portfolio") %>%
add_trace(x = ~as.Date(Date), y = ~Change_benchmark, name = "Benchmark") %>%
layout(xaxis = list(title = "Time"), yaxis = list(title = "Yield"))
plot_ly(data = dt, x = ~as.Date(Date), y = ~Change_portfolio,
type = "scatter", mode = "lines+markers", name = "Portfolio") %>%
add_trace(x = ~as.Date(Date), y = ~Change_benchmark, name = "Benchmark") %>%
layout(xaxis = list(title = "Time"), yaxis = list(title = "Return"))
dt <- f_load(ticker = c("DSV.CO", "NOVO-B.CO", "VWS.CO",
"ORSTED.CO", "^OMXC25"),
from_date = "2021-01-01", indicators = FALSE)
dt <- f_columnise(data = dt)
dt
w <- c(0.1512, 0.1208, 0.1111, 0.759)
dt$portfolio <- dt$NOVO_B_CO + dt$DSV_CO + dt$VWS_CO + dt$ORSTED_CO
dt$portfolio <- w[1] * dt$NOVO_B_CO +
w[2] * dt$DSV_CO + w[3] * dt$VWS_CO + w[4] * dt$ORSTED_CO
dt[, Change_portfolio := f_change(portfolio, from_start = TRUE)]
dt[, Change_benchmark := f_change(OMXC25, from_start = TRUE)]
plot_ly(data = dt, x = ~as.Date(Date), y = ~Change_portfolio,
type = "scatter", mode = "lines+markers", name = "Portfolio") %>%
add_trace(x = ~as.Date(Date), y = ~Change_benchmark, name = "Benchmark") %>%
layout(xaxis = list(title = "Time"), yaxis = list(title = "Return"))
dt
dt
w <- c(991.369, 276.661, 261.539, 430.36)
w <- w / sum(w)
w
dt$portfolio <- w[1] * dt$NOVO_B_CO +
w[2] * dt$DSV_CO + w[3] * dt$VWS_CO + w[4] * dt$ORSTED_CO
dt[, Change_portfolio := f_change(portfolio, from_start = TRUE)]
dt[, Change_benchmark := f_change(OMXC25, from_start = TRUE)]
library(plotly)
plot_ly(data = dt, x = ~as.Date(Date), y = ~Change_portfolio,
type = "scatter", mode = "lines+markers", name = "Portfolio") %>%
add_trace(x = ~as.Date(Date), y = ~Change_benchmark, name = "Benchmark") %>%
layout(xaxis = list(title = "Time"), yaxis = list(title = "Return"))
devtools::build()
getwd()
## Install
devtools::install(upgrade = FALSE)
devtools::build()
